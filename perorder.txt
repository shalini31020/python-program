class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def inorder_traversal(root):
    result = []
    def dfs(node):
        if node:
            result.append(node.val)
            dfs(node.left)
            dfs(node.right)
               
    dfs(root)
    return result
root=TreeNode(7)
Node1=TreeNode(6)
Node2=TreeNode(3)
Node3=TreeNode(5)
Node4=TreeNode(4)
Node5=TreeNode(2)
Node6=TreeNode(1)
root.left=Node1
root.right=Node2
Node1.left=Node3
Node1.right=Node4
Node2.left=Node5
Node2.right=Node6 
print(inorder_traversal(root))

output:
[7, 6, 5, 4, 3, 2, 1]
